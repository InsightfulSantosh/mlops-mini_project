name: CI Pipeline

on: push

jobs:
  setup-environment:
    runs-on: ubuntu-latest
    outputs:
      venv-cache-key: ${{ steps.cache-venv.outputs.cache-key }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache Virtual Environment
        id: cache-venv
        uses: actions/cache@v3
        with:
          path: venv
          key: venv-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            venv-${{ runner.os }}-

      - name: Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install dvc[s3] boto3
          which dvc  # Debugging step

  pull-dvc-data:
    runs-on: ubuntu-latest
    needs: setup-environment
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Restore Virtual Environment
        uses: actions/cache@v3
        with:
          path: venv
          key: ${{ needs.setup-environment.outputs.venv-cache-key }}

      - name: Activate Virtual Environment & Check DVC
        run: |
          source venv/bin/activate
          which dvc  # Debugging step to confirm DVC installation

      - name: Configure AWS for DVC
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          source venv/bin/activate
          dvc remote modify origin access_key_id $AWS_ACCESS_KEY_ID
          dvc remote modify origin secret_access_key $AWS_SECRET_ACCESS_KEY
          dvc remote modify origin region $AWS_REGION

      - name: Pull DVC Data
        run: |
          source venv/bin/activate
          dvc pull -v || echo "⚠️ DVC Pull Failed, continuing..."
