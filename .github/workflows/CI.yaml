name: ML Sentiment Analysis CI Pipeline

on:
  push:
    branches: 
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  PYTHON_VERSION: '3.12'
  PROJECT_NAME: sentiment
  MLFLOW_TRACKING_URI: https://dagshub.com/InsightfulSantosh/mlops-mini_project.mlflow

jobs:
  project-testing:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full git history for versioning

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest coverage flake8

      - name: Set Environment Variables
        run: |
          echo "DAGSHUB_PAT=${{ secrets.DAGSHUB_PAT }}" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_USERNAME=${{ secrets.DAGSHUB_PAT }}" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_PASSWORD=${{ secrets.DAGSHUB_PAT }}" >> $GITHUB_ENV

      - name: Run Linting
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Configure AWS for DVC
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_REGION
          dvc remote list

      - name: Pull DVC Data  
        run: |
          dvc pull -v || echo "No DVC data to pull or pull failed"
          ls -lah data/processed/ || echo "Processed data directory not found"

      - name: Run Pipeline
        continue-on-error: true
        run: |
          dvc repro -f
          dvc metrics show

      - name: Model Testing
        run: |
          python -m unittest test/model_test.py


      - name: Promote Model to Production
        if: success()
        run: python script/promote.py

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install DVC in Docker Build Job
        run: |
          python -m pip install --upgrade pip
          pip install dvc dvc-s3
          which dvc || (echo "DVC installation failed!" && exit 1)

      - name: Verify Model File & Pull if Missing
        run: |
          if [ ! -f models/vectorizer.pkl ]; then
            echo "vectorizer.pkl not found! Pulling from DVC..."
            dvc pull -v || echo "No DVC data to pull or pull failed"
          else
            echo "vectorizer.pkl found."
          fi

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t insightfulsantosh/sentiment .

      - name: Push Docker Image to Docker Hub
        run: |
          docker push insightfulsantosh/sentiment


