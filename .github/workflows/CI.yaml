name: CI Pipeline

on: push

jobs:
  project-testing:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Set Environment Variables
        run: |
          echo "DAGSHUB_PAT=${{ secrets.DAGSHUB_PAT }}" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_URI=https://dagshub.com/InsightfulSantosh/mlops-mini_project.mlflow" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_USERNAME=${{ secrets.DAGSHUB_PAT }}" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_PASSWORD=${{ secrets.DAGSHUB_PAT }}" >> $GITHUB_ENV

      - name: Configure AWS for DVC
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_REGION
          dvc remote list

      - name: Pull DVC Data  
        run: |
          dvc pull -v
          if [ $? -ne 0 ]; then
            echo "⚠️ DVC Pull Failed - Check your data sources and credentials"
            exit 1
          fi
          ls -lah data/processed/  # Debugging: Check if files exist

      - name: Run Pipeline
        run: |
          dvc repro -f

      - name: DVC Push
        run: |
          dvc push

      - name: Check DVC Status
        run: dvc status
      
      - name: model testing 
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: |
          python -m unittest test/model_test.py

      - name: Promote model to production
        if: success()
        run: python script/promote.py