name: ML Sentiment Analysis CI Pipeline

on:
  push:
    branches:
      - main

env:
  PYTHON_VERSION: '3.12'

jobs:
  project-testing:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python & Cache Dependencies
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest coverage flake8 dvc dvc-s3 mlflow boto3

      - name: Set Environment Variables
        run: |
          echo "DAGSHUB_PAT=${{ secrets.DAGSHUB_PAT }}" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
          echo "Environment variables set"

      - name: Configure AWS Credentials
        run: |
          aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
          aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
          aws configure set region "$AWS_REGION"

      - name: Run Linting
        run: flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Pull Data from DVC (S3)
        run: dvc pull -v || echo "No DVC data to pull"

      - name: Run Pipeline
        run: dvc repro -f && dvc metrics show

      - name: Model Testing
        run: python -m unittest test/model_test.py

      - name: Promote Model to Production
        if: success()
        run: python script/promote.py

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker Layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build & Push Multi-Architecture Docker Image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker buildx build --platform linux/amd64,linux/arm64 \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache \
            -t insightfulsantosh/sentiment:latest \
            --push .
